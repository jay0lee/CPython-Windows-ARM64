# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86, x64, arm64]
        majorpython: ["3.9"]

    steps:
      - name: Set environment variables
        env:
          ARCH: ${{ matrix.arch }}
        run: |
          switch ( $env:ARCH )
          {
            x86
              {
                $env:installerarch = 'Win32'
                $env:embeddedarch = ''
              }
            x64
              {
                $env:installerarch = 'AMD64'
                $env:embeddedarch = 'AMD64'
              }
            arm64
              {
                $env:installerarch = 'ARM64'
                $env:embeddedarch = 'ARM64'
              }
          }
          Write-Output "ARCH: $env:ARCH"
          Write-Output "installerarch: $env:installerarch"
          Write-Output "embeddedarch: $env:embeddedarch"
          Add-Content -Path $env:GITHUB_ENV -Value "ARCH=${env:ARCH}"
          Add-Content -Path $env:GITHUB_ENV -Value "installerarch=${env:installerarch}"
          Add-Content -Path $env:GITHUB_ENV -Value "embeddedarch=${env:embeddedarch}"

      - name: Install tools with Choco
        run: |
          choco install python3 --params "/InstallDir:c:\python"
          choco install sphinx
          
      - name: Clone Python
        env:
          majorpython: ${{ matrix.majorpython }}
        run: |
          git clone https://github.com/jay0lee/cpython.git
          cd cpython
          git checkout $env:majorpython

      - name: Build installers
        run: |
          cd cpython
          PCBuild\get_externals.bat
          $env:PYTHON = "c:\python\python.exe"
          echo "Python location: $env:PYTHON"
          Invoke-Expression "$env:PYTHON -V"
          $env:SPHINXBUILD = "c:\python\scripts\sphinx-build.exe"
          echo "Sphinx Build location: $env:SPHINXBUILD"
          Invoke-Expression "$env:SPHINXBUILD --version"
          Tools\msi\buildrelease.bat -$env:ARCH --out release
          echo "In release:"
          dir release\
          dir release\$env:installerarch\
          echo "----ONE----"
          Get-ChildItem .\release\$env:installerarch\python-*-$env:installerarch.exe -Name
          echo "----TWO----"
          Get-ChildItem .\release\$env:installerarch\python-*-$env:installerarch.exe -Name | Select-String -Pattern "^python-(.*)-$env:installerarch"
          echo "----THREE----"
          Get-ChildItem .\release\$env:installerarch\python-*-$env:installerarch.exe -Name | Select-String -Pattern "^python-(.*)-$env:installerarch" | % {"$($_.matches.groups[1])"}
          $pyver = Get-ChildItem .\release\$env:installerarch\python-*-$env:installerarch.exe -Name | Select-String -Pattern "^python-(.*)-$env:installerarch" | % {"$($_.matches.groups[1])"}
          echo "pyver: $env:pyver"
          Add-Content -Path $env:GITHUB_ENV -Value "pyver=${env:pyver}"

      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: python-${{ env.pyver }}${{ env.installerarch }}.exe
          path: |
            cpython/release/python-${{ env.pyver }}${{ env.installerarch }}.exe
